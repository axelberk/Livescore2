<div className="top-scorers">
          <h3>Top Scorers</h3>
          <table className="individual-table">
            <thead>
              <tr>
                <th>#</th>
                <th>Player</th>
                <th>Team</th>
                <th>Goals</th>
              </tr>
            </thead>
            <tbody>
              {(() => {
                let lastGoals = null;
                let displayRank = 0;
                let actualIndex = 0;

                return topScorers
                  .sort(
                    (a, b) =>
                      (b.statistics[0].goals.total ?? 0) -
                      (a.statistics[0].goals.total ?? 0)
                  )
                  .slice(0, 10)
                  .map((player) => {
                    actualIndex++;
                    const goals = player.statistics[0].goals.total ?? 0;
                    if (goals !== lastGoals) {
                      displayRank = actualIndex;
                      lastGoals = goals;
                    }

                    return (
                      <tr key={player.player.id}>
                        <td>{displayRank}</td>
                        <td>
  <a className="player-link" onClick={() => handlePlayerClick(player.player)}>
    {player.player.name}
  </a>
</td>
                        <td>{player.statistics[0].team.name}</td>
                        <td className="individual-number">{goals}</td>
                      </tr>
                    );
                  });
              })()}
            </tbody>
          </table>
        </div>
        <hr class="solid"></hr>
        <div className="top-assists">
          <h3>Top Assists</h3>
          <table className="individual-table">
            <thead>
              <tr>
                <th>#</th>
                <th>Player</th>
                <th>Team</th>
                <th>Assists</th>
              </tr>
            </thead>
            <tbody>
              {(() => {
                let lastAssists = null;
                let displayRank = 0;
                let actualIndex = 0;

                return topAssists
                  .sort(
                    (a, b) =>
                      (b.statistics[0].goals.assists ?? 0) -
                      (a.statistics[0].goals.assists ?? 0)
                  )
                  .slice(0, 10)
                  .map((player) => {
                    actualIndex++;
                    const assists = player.statistics[0].goals.assists ?? 0;
                    if (assists !== lastAssists) {
                      displayRank = actualIndex;
                      lastAssists = assists;
                    }

                    return (
                      <tr key={player.player.id}>
                        <td>{displayRank}</td>
                       <td>
  <a className="player-link" onClick={() => handlePlayerClick(player.player)}>
    {player.player.name}
  </a>
</td>
                        <td>{player.statistics[0].team.name}</td>
                        <td className="individual-number">{assists}</td>
                      </tr>
                    );
                  });
              })()}
            </tbody>
          </table>
        </div>
        <hr class="solid"></hr>
        <div className="top-red-cards">
          <h3>
            Red Cards{" "}
            <img src="/Red_card.svg" alt="" className="individual-logo" />
          </h3>
          <table className="individual-table">
            <thead>
              <tr>
                <th>#</th>
                <th>Player</th>
                <th>Team</th>
                <th>Reds</th>
              </tr>
            </thead>
            <tbody>
              {(() => {
                let lastRed = null;
                let displayRank = 0;
                let actualIndex = 0;

                return redCards
                  .sort(
                    (a, b) =>
                      (b.statistics[0].cards.red ?? 0) -
                      (a.statistics[0].cards.red ?? 0)
                  )
                  .filter((player) => (player.statistics[0].cards.red ?? 0) > 0)
                  .slice(0, 10)
                  .map((player) => {
                    actualIndex++;
                    const red = player.statistics[0].cards.red ?? 0;
                    if (red !== lastRed) {
                      displayRank = actualIndex;
                      lastRed = red;
                    }

                    return (
                      <tr key={player.player.id}>
                        <td>{displayRank}</td>
                       <td>
  <a className="player-link" onClick={() => handlePlayerClick(player.player)}>
    {player.player.name}
  </a>
</td>
                        <td>{player.statistics[0].team.name}</td>
                        <td className="individual-number">{red}</td>
                      </tr>
                    );
                  });
              })()}
            </tbody>
          </table>
        </div>